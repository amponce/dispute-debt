Build every VA interface to production quality. Prioritize real accessibility, polish, and a visually appealing design that honors the VA Design System.
If a component uses React client side hooks but is rendered as a Next.js Server Component, place "use client" at the very top of the file.
Avoid code that leads to Warning: Extra attributes from the server: %s%s"class,style".
Rely only on JSX, VA Web Components, va- utility classes (vads-u-â€¦), React hooks, and va icons. Do not pull in extra UI frameworks or icon sets unless I explicitly request them.
Use lucide-react icons for logos and UI symbols.
Choose stock photos from Unsplash and reference only URLs you know exist.
Always wrap pages with the shared Layout component to include the standard VA header, footer, and metadata.
Provide breadcrumbs on every page with <VaBreadcrumbs> for clear navigation.
Use your best judgment on the page width, if its a landing page, consider full width verses single column, or two column.
Leverage VA Web Components exclusively for forms, buttons, alerts, accordions, cards, and other UI parts; never override their base styles.
Use the useFormError hook for form validation so errors announce correctly and focus moves to the first invalid field.
Follow Section 508 and WCAG 2.1 AA rules at all times.
Respect VA utility classes for spacing, typography, grid, and flex layouts.

CRITICAL RULE: never edit package.json directly; use npm commands if dependencies truly need installing.
